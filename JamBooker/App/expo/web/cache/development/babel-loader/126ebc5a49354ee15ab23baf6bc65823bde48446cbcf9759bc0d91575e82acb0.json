{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState } from 'react';\nimport Logo from \"../assets/images/logo2.png\";\nimport CustomInput from \"../components/CustomInput.js\";\nimport CustomButton from \"../components/CustomButton.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height;\n  var onLoginPressed = function onLoginPressed() {\n    alert(\"Logged in with User \" + email + \" and \" + password);\n  };\n  return _jsxs(View, {\n    style: styles.view,\n    children: [_jsx(Image, {\n      source: Logo,\n      style: [styles.logo, {\n        height: height * 0.3\n      }],\n      resizeMode: \"contain\"\n    }), _jsx(CustomInput, {\n      placeholder: \"Email\",\n      value: email,\n      setValue: setEmail\n    }), _jsx(CustomInput, {\n      placeholder: \"Password\",\n      value: password,\n      setValue: setPassword,\n      secureTextEntry: true\n    }), _jsx(CustomButton, {\n      text: \"Login\",\n      onPress: onLoginPressed\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"RegisterUser\");\n      },\n      children: _jsxs(Text, {\n        children: [\"N\\xE3o tem uma conta?\", _jsx(Text, {\n          style: styles.createAccountText,\n          children: \"Crie uma\"\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  view: {\n    alignItems: 'center',\n    padding: 20\n  },\n  logo: {\n    width: '70%',\n    maxWidth: 300,\n    maxHeight: 200\n  },\n  createAccountText: {\n    fontWeight: \"bold\",\n    color: \"#6200ee\"\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","Logo","CustomInput","CustomButton","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useWindowDimensions","useWindowDimensions","height","onLoginPressed","alert","View","style","styles","view","children","Image","source","logo","resizeMode","placeholder","value","setValue","secureTextEntry","text","onPress","TouchableOpacity","navigate","Text","createAccountText","StyleSheet","create","alignItems","padding","width","maxWidth","maxHeight","fontWeight","color"],"sources":["C:/Users/gabriel_beirao/Documents/Beiras/SA - 2 FASE/JamBooker/JamBooker/src/screens/Login.js"],"sourcesContent":["import {\r\n    StyleSheet, TouchableOpacity, View, Image, useWindowDimensions, Text\r\n} from \"react-native\";\r\nimport React, { useState } from 'react';\r\nimport Logo from '../assets/images/logo2.png';\r\nimport CustomInput from \"../components/CustomInput.js\";\r\nimport CustomButton from \"../components/CustomButton.js\";\r\nconst Login = ({ navigation }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const { height } = useWindowDimensions();\r\n    const onLoginPressed = () => {\r\n        alert(\"Logged in with User \" + email + \" and \" + password);\r\n    }\r\n    return (\r\n        <View style={styles.view}>\r\n            <Image\r\n                source={Logo}\r\n                style={[styles.logo, { height: height * 0.3 }]}\r\n                resizeMode=\"contain\"\r\n            />\r\n            <CustomInput\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                setValue={setEmail}\r\n            />\r\n            <CustomInput\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                setValue={setPassword}\r\n                secureTextEntry={true}\r\n            />\r\n            <CustomButton text=\"Login\" onPress={onLoginPressed} />\r\n            <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"RegisterUser\")}\r\n            >\r\n                <Text>\r\n                    NÃ£o tem uma conta? \r\n                  \r\n                    <Text style={styles.createAccountText}>\r\n                        Crie uma\r\n                    </Text>\r\n                </Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n};\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        alignItems: 'center',\r\n        padding: 20,\r\n    },\r\n    logo: {\r\n        width: '70%',\r\n        maxWidth: 300,\r\n        maxHeight: 200,\r\n    },\r\n    createAccountText: {\r\n        fontWeight: \"bold\",\r\n        color: \"#6200ee\",\r\n    },\r\n});\r\nexport default Login;\r\n\r\n"],"mappings":";;;;;;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI;AACX,OAAOC,WAAW;AAClB,OAAOC,YAAY;AAAsC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACzD,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACvB,IAAAC,SAAA,GAA0BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,oBAAA,GAAmBC,mBAAmB,CAAC,CAAC;IAAhCC,MAAM,GAAAF,oBAAA,CAANE,MAAM;EACd,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IACzBC,KAAK,CAAC,sBAAsB,GAAGV,KAAK,GAAG,OAAO,GAAGI,QAAQ,CAAC;EAC9D,CAAC;EACD,OACIX,KAAA,CAACkB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,GACrBxB,IAAA,CAACyB,KAAK;MACFC,MAAM,EAAE9B,IAAK;MACbyB,KAAK,EAAE,CAACC,MAAM,CAACK,IAAI,EAAE;QAAEV,MAAM,EAAEA,MAAM,GAAG;MAAI,CAAC,CAAE;MAC/CW,UAAU,EAAC;IAAS,CACvB,CAAC,EACF5B,IAAA,CAACH,WAAW;MACRgC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAErB,KAAM;MACbsB,QAAQ,EAAErB;IAAS,CACtB,CAAC,EACFV,IAAA,CAACH,WAAW;MACRgC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAEjB,WAAY;MACtBkB,eAAe,EAAE;IAAK,CACzB,CAAC,EACFhC,IAAA,CAACF,YAAY;MAACmC,IAAI,EAAC,OAAO;MAACC,OAAO,EAAEhB;IAAe,CAAE,CAAC,EACtDlB,IAAA,CAACmC,gBAAgB;MACbD,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAM7B,UAAU,CAAC+B,QAAQ,CAAC,cAAc,CAAC;MAAA,CAAC;MAAAZ,QAAA,EAEnDtB,KAAA,CAACmC,IAAI;QAAAb,QAAA,GAAC,uBAGF,EAAAxB,IAAA,CAACqC,IAAI;UAAChB,KAAK,EAAEC,MAAM,CAACgB,iBAAkB;UAAAd,QAAA,EAAC;QAEvC,CAAM,CAAC;MAAA,CACL;IAAC,CACO,CAAC;EAAA,CACjB,CAAC;AAEf,CAAC;AACD,IAAMF,MAAM,GAAGiB,UAAU,CAACC,MAAM,CAAC;EAC7BjB,IAAI,EAAE;IACFkB,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACb,CAAC;EACDf,IAAI,EAAE;IACFgB,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,GAAG;IACbC,SAAS,EAAE;EACf,CAAC;EACDP,iBAAiB,EAAE;IACfQ,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AACF,eAAe5C,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}